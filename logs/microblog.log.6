2020-04-08 17:36:21,155 ERROR: Exception on /unit/11/edit [POST] [in /usr/local/lib/python2.7/dist-packages/flask/app.py:1891]
Traceback (most recent call last):
  File "/usr/local/lib/python2.7/dist-packages/flask/app.py", line 2446, in wsgi_app
    response = self.full_dispatch_request()
  File "/usr/local/lib/python2.7/dist-packages/flask/app.py", line 1951, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/usr/local/lib/python2.7/dist-packages/flask/app.py", line 1820, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/usr/local/lib/python2.7/dist-packages/flask/app.py", line 1949, in full_dispatch_request
    rv = self.dispatch_request()
  File "/usr/local/lib/python2.7/dist-packages/flask/app.py", line 1935, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/usr/local/lib/python2.7/dist-packages/flask_login/utils.py", line 272, in decorated_view
    return func(*args, **kwargs)
  File "/root/compNet/app/routes.py", line 162, in unit_edit
    db.session.commit()
  File "/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/session.py", line 1036, in commit
    self.transaction.commit()
  File "/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/session.py", line 503, in commit
    self._prepare_impl()
  File "/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/session.py", line 482, in _prepare_impl
    self.session.flush()
  File "/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/session.py", line 2479, in flush
    self._flush(objects)
  File "/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/session.py", line 2617, in _flush
    transaction.rollback(_capture_exception=True)
  File "/usr/local/lib/python2.7/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
  File "/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/session.py", line 2577, in _flush
    flush_context.execute()
  File "/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/persistence.py", line 264, in save_obj
    ) in states_to_update
  File "/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/persistence.py", line 1435, in _finalize_insert_update_commands
    mapper.dispatch.after_update(mapper, connection, state)
  File "/usr/local/lib/python2.7/dist-packages/sqlalchemy/event/attr.py", line 322, in __call__
    fn(*args, **kw)
  File "/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/events.py", line 646, in wrap
    fn(*arg, **kw)
  File "/usr/local/lib/python2.7/dist-packages/flask_whooshee.py", line 435, in after_update
    self.on_commit([[target, UPDATE_KWD]])
  File "/usr/local/lib/python2.7/dist-packages/flask_whooshee.py", line 454, in on_commit
    writer = type(self).get_or_create_index(_get_app(self), wh).\
  File "/usr/local/lib/python2.7/dist-packages/flask_whooshee.py", line 424, in get_or_create_index
    index = cls.create_index(app, wh)
  File "/usr/local/lib/python2.7/dist-packages/flask_whooshee.py", line 397, in create_index
    if whoosh.index.exists_in(index_path):
  File "/usr/local/lib/python2.7/dist-packages/whoosh/index.py", line 136, in exists_in
    ix = open_dir(dirname, indexname=indexname)
  File "/usr/local/lib/python2.7/dist-packages/whoosh/index.py", line 123, in open_dir
    return FileIndex(storage, schema=schema, indexname=indexname)
  File "/usr/local/lib/python2.7/dist-packages/whoosh/index.py", line 421, in __init__
    TOC.read(self.storage, self.indexname, schema=self._schema)
  File "/usr/local/lib/python2.7/dist-packages/whoosh/index.py", line 664, in read
    segments = stream.read_pickle()
  File "/usr/local/lib/python2.7/dist-packages/whoosh/filedb/structfile.py", line 245, in read_pickle
    return load_pickle(self.file)
ValueError: unsupported pickle protocol: 4
2020-04-08 17:37:04,874 ERROR: Exception on /record/9/delete [POST] [in /usr/local/lib/python2.7/dist-packages/flask/app.py:1891]
Traceback (most recent call last):
  File "/usr/local/lib/python2.7/dist-packages/flask/app.py", line 2446, in wsgi_app
    response = self.full_dispatch_request()
  File "/usr/local/lib/python2.7/dist-packages/flask/app.py", line 1951, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/usr/local/lib/python2.7/dist-packages/flask/app.py", line 1820, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/usr/local/lib/python2.7/dist-packages/flask/app.py", line 1949, in full_dispatch_request
    rv = self.dispatch_request()
  File "/usr/local/lib/python2.7/dist-packages/flask/app.py", line 1935, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/usr/local/lib/python2.7/dist-packages/flask_login/utils.py", line 272, in decorated_view
    return func(*args, **kwargs)
  File "/root/compNet/app/routes.py", line 80, in record_delete
    db.session.commit()
  File "/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/session.py", line 1036, in commit
    self.transaction.commit()
  File "/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/session.py", line 503, in commit
    self._prepare_impl()
  File "/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/session.py", line 482, in _prepare_impl
    self.session.flush()
  File "/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/session.py", line 2479, in flush
    self._flush(objects)
  File "/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/session.py", line 2617, in _flush
    transaction.rollback(_capture_exception=True)
  File "/usr/local/lib/python2.7/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
  File "/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/session.py", line 2577, in _flush
    flush_context.execute()
  File "/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/unitofwork.py", line 624, in execute
    uow,
  File "/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/persistence.py", line 358, in delete_obj
    mapper.dispatch.after_delete(mapper, connection, state)
  File "/usr/local/lib/python2.7/dist-packages/sqlalchemy/event/attr.py", line 322, in __call__
    fn(*args, **kw)
  File "/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/events.py", line 646, in wrap
    fn(*arg, **kw)
  File "/usr/local/lib/python2.7/dist-packages/flask_whooshee.py", line 432, in after_delete
    self.on_commit([[target, DELETE_KWD]])
  File "/usr/local/lib/python2.7/dist-packages/flask_whooshee.py", line 454, in on_commit
    writer = type(self).get_or_create_index(_get_app(self), wh).\
  File "/usr/local/lib/python2.7/dist-packages/flask_whooshee.py", line 424, in get_or_create_index
    index = cls.create_index(app, wh)
  File "/usr/local/lib/python2.7/dist-packages/flask_whooshee.py", line 397, in create_index
    if whoosh.index.exists_in(index_path):
  File "/usr/local/lib/python2.7/dist-packages/whoosh/index.py", line 136, in exists_in
    ix = open_dir(dirname, indexname=indexname)
  File "/usr/local/lib/python2.7/dist-packages/whoosh/index.py", line 123, in open_dir
    return FileIndex(storage, schema=schema, indexname=indexname)
  File "/usr/local/lib/python2.7/dist-packages/whoosh/index.py", line 421, in __init__
    TOC.read(self.storage, self.indexname, schema=self._schema)
  File "/usr/local/lib/python2.7/dist-packages/whoosh/index.py", line 664, in read
    segments = stream.read_pickle()
  File "/usr/local/lib/python2.7/dist-packages/whoosh/filedb/structfile.py", line 245, in read_pickle
    return load_pickle(self.file)
ValueError: unsupported pickle protocol: 4
